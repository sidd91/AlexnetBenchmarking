// AUTOGENERATED by Xilinx OpenCL - do not modify

#line 1 "executeFirstLayer1_p3_compute_unit"
#include "C:/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/opencl/libspir_types.h"

#include "C:/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/etc/autopilot_ssdm_op.h"
#include "C:/Xilinx/Vivado_HLS/2016.4/common/technology/autopilot/ap_cint.h"
#define XCL_SIZE_T __spir_size_t

/* KernelID: A, Kernel Name: executeFirstLayer1_p3 */

class aesl_keep_name_class;
typedef struct {
  unsigned int x;
  unsigned int y;
  unsigned int z;
  friend class ::aesl_keep_name_class;
} three_tuple_t;

typedef struct {
  XCL_SIZE_T bias;
  XCL_SIZE_T Layer1_Neurons_GPU;
  XCL_SIZE_T Layer1_Weights_GPU;
  XCL_SIZE_T Layer2_Neurons_GPU;
  friend class ::aesl_keep_name_class;
} executeFirstLayer1_p3_args_t;

class aesl_keep_name_class {
public:
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_group_id(three_tuple_t* group_id) {
    _ssdm_op_SpecExt("member_name", "group_id.x", &group_id->x);
    _ssdm_op_SpecExt("member_name", "group_id.y", &group_id->y);
    _ssdm_op_SpecExt("member_name", "group_id.z", &group_id->z);
  }
  inline __attribute__((always_inline)) static void
  aesl_keep_name_0_args(executeFirstLayer1_p3_args_t* args) {
    _ssdm_op_SpecExt("member_name", "bias", &args->bias);
    _ssdm_op_SpecExt("member_name", "Layer1_Neurons_GPU", &args->Layer1_Neurons_GPU);
    _ssdm_op_SpecExt("member_name", "Layer1_Weights_GPU", &args->Layer1_Weights_GPU);
    _ssdm_op_SpecExt("member_name", "Layer2_Neurons_GPU", &args->Layer2_Neurons_GPU);
  }
};

extern "C" {

extern void __SPIR_kernelA(...);
void __AESL_call_work_itemA(...);

void
__AESL_call_work_item_NA(volatile __attribute__((address_space(16776960))) unsigned int* gmem, __spir_rt_info_t *rt_info, executeFirstLayer1_p3_args_t *args)
{
  volatile __attribute__((address_space(16776960))) unsigned int *arg_bias = (gmem + ((XCL_SIZE_T)args->bias >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_Layer1_Neurons_GPU = (gmem + ((XCL_SIZE_T)args->Layer1_Neurons_GPU >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_Layer1_Weights_GPU = (gmem + ((XCL_SIZE_T)args->Layer1_Weights_GPU >> 2));
  volatile __attribute__((address_space(16776960))) unsigned int *arg_Layer2_Neurons_GPU = (gmem + ((XCL_SIZE_T)args->Layer2_Neurons_GPU >> 2));
  __SPIR_kernelA(rt_info, arg_bias, arg_Layer1_Neurons_GPU, arg_Layer1_Weights_GPU, arg_Layer2_Neurons_GPU);
  return;
}

void
__AESL_work_groupA(__attribute__((address_space(16776960))) volatile unsigned int* gmem, three_tuple_t *group_id, executeFirstLayer1_p3_args_t *args)
{
#define RT_INFO_REQD_LOCAL_SIZE_X 23
#define RT_INFO_REQD_LOCAL_SIZE_Y 32
#define RT_INFO_REQD_LOCAL_SIZE_Z 1
#define RT_INFO_NEED_GROUP_ID
::aesl_keep_name_class::aesl_keep_name_0_group_id(group_id);
::aesl_keep_name_class::aesl_keep_name_0_args(args);
_ssdm_op_SpecInterface(gmem, "m_axi", 0, 0, "",128, 0, "", "", "", 16, 16, 16, 16, "", "");
_ssdm_op_SpecInterface(group_id, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(0, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(args, "s_axilite", 0, 0, "", 0, 0, "control", "", "", 0, 0, 0, 0, "", "");
#define CALL_WORK_ITEM_FUNC __AESL_call_work_itemA
#include "aesl_gen_cu_body.inc"
CALL_WORK_ITEM_FUNC(gmem, &rt_info, args);
#undef  CALL_WORK_ITEM_FUNC
return;
#undef RT_INFO_NEED_GROUP_ID
#undef RT_INFO_REQD_LOCAL_SIZE_X
#undef RT_INFO_REQD_LOCAL_SIZE_Y
#undef RT_INFO_REQD_LOCAL_SIZE_Z
}

} // extern C
